title VAC-TRA-Onafgewerkt-transactiemodel-TV-v1

actor Gebruiker
participant Controller
participant Service
participant Repository
database Database

==Transaction: Homepage==
Gebruiker->Controller:Startup or Click logo
Controller->Service:Search Vacancies
Service->Repository: Search Vacancies
Repository->Database:Execute Query
Database->Repository:Result Query
Repository->Service:Return Result
Service->Controller:Return Result
Controller->Gebruiker:Render Homepage

==Transaction: Vacancypage==
Gebruiker->Controller:Click Vacancy
Controller->Service:Find Vacancy Details (vacancy_id)
Service->Repository: Find Vacancy Details (vacancy_id)
Repository->Database:Execute Query
Database->Repository:Result Query
Repository->Service:Return Result
Service->Controller:Return Result
Controller->Gebruiker:Render Vacancypage

==Transaction: MyApplicationsPage==
Gebruiker->Controller:Click MyApplications Button (header)
Controller->Service:if (UserLoggedIn) Get Vacancies User Applied For
Service->Repository: Get Vacancies User Applied For
Repository->Database:Execute Query
Database->Repository:Result Query
Repository->Service:Return Vacancies
Service->Controller:Return Vacancies
Controller->Gebruiker:Render MyApplicationsPage

==Transaction: LoginPage==
Gebruiker->Controller:Click Login Button (header)
Controller->Gebruiker:Show LoginPage

==Transaction: ProfilePage==
Gebruiker->Controller:Click Profile Button (header)
Controller->Service:if(LoggedIn) Get Profile Info (id)
Service->Repository:Get Profile Info (id)
Repository->Database:Execute Query
Database->Repository:Result Query
Repository->Service:Return Result
Service->Controller:Return Result
Controller->Gebruiker:Render ProfilePage

==Transaction: Login==
Gebruiker->Controller:Click Login Button (LoginPage)
Controller->Service: Send Email and Password
Service->Repository:Send Email and Password
Repository->Database: Verify Combination
Database->Repository:Result
Repository->Service:Return Result
Service->Controller:Return Result
Controller->Gebruiker:Show HomePage (update header)

==Transaction: Register (ROLE_CANDIDATE)==
Gebruiker->Controller :Click Register Button (LoginPage and header)
Controller->Service:Send user_info
Service->Repository:Send user_info
Repository->Database: Verify and Create User (Role_Candidate)
Database->Repository:Result
Repository->Service:Show Result
Service->Controller:Show Result
Controller->Gebruiker:Show Result (Success / Error)

==Transaction: Register (ROLE_EMPLOYER)==
Gebruiker->Repository:Insert Command with Data (+ default Password!) from selected Excelsheet (SelectFile prompt/popup)
Repository->Database: Verify and Create User (Role_Employer)
Database->Repository:Result
Repository->Gebruiker: Show result in CLI: (+) Succesful (-) Error 

==Transaction: Update Profile Info==
Gebruiker->Controller:Click Save Button (ProfilePage)
Controller->Service:Send inserted profile_info (to update)
Service->Repository:Send inserted profile_info
Repository->Database: Verify and Update Profile
Database->Repository:Result
Repository->Service:Return Result
Service->Controller:Return Result
Controller->Gebruiker:Update ProfilePage

==Transaction: Update Vacancy (Employers)==
Gebruiker->Controller:Click Update Button (VacancyPage)
Controller->Service:if(Role_Employer) Send inserted vacancy_info (to update)
Service->Repository: Send inserted vacancy_info (to update)
Repository->Database: Verify and Update Vacancy
Database->Repository:Result
Repository->Service:Return Result
Service->Controller:Return Result
Controller->Gebruiker:Update VacancyPage

==Transaction: Create Vacancy (Employers)==
Gebruiker->Controller:Click Create Button (VacancyPage)
Controller->Service:if(Role_Employer) Send data
Service->Repository:Send data
Repository->Database:Create Vacancy
Database->Repository:Result
Repository->Service:Return Result
Service->Controller:Return Result
Controller->Gebruiker:Show (created) VacancyPage

==Transaction: Get Candidates (Employers)==
Gebruiker->Controller:Click Candidates-button (Vacancypage) OR load at bottom of VacancyPage
Controller->Service:if(Role_Employer) Get Profiles
Service->Repository:Get Profiles
Repository->Database: findCandidates (those who applied)
Database->Repository:Result
Repository->Service:Return Result
Service->Controller:Return Result
Controller->Gebruiker:Show CandidatesPage OR Update VacancyPage

==Transaction: Invite Candidates (Employers)==
Gebruiker->Controller:Click Invite-button (CandidatesPage OR VacancyPage)
Controller->Gebruiker:Confirm "Are you sure you wish to invite these Candidates?"
Gebruiker->Controller:Yes
Controller->Service: Invite Candidate Profiles (send Candidates ids)
Service->Repository:Invite Candidate Profiles
Repository->Database: inviteCandidates (update db)
Database->Repository:Result
Repository->Service:Return Result
Service->Controller:Return Result
Controller->Gebruiker:Show CandidatesPage OR Update VacancyPage

==Transaction: (Un)Apply==
Gebruiker->Controller:Click Apply-button / Click Cancel-button (Vacancy-page)
Controller->Gebruiker:Confirm Action
Gebruiker->Controller:Yes
Controller->Service: Send Candidate Data
Service->Repository:Send Candidate Data
Repository->Database: Verify and Create Application
Database->Repository:Result
Repository->Service:Return Result
Service->Controller:Return Result
Controller->Gebruiker:Show Result (confirm / error)